'
'Example for Magnetic_rotary Click
'
'    Date          : Nov 2018.
'    Author        : Nemanja Medakovic
'
'Test configuration PIC32 :
'    
'    MCU                : P32MX795F512L
'    Dev. Board         : EasyPIC Fusion v7
'    PIC32 Compiler ver : v4.0.0.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes peripherals and pins.
'- Application Initialization - Initializes SPI interface for communication with the device.
'- Application Task - (code snippet) - Reads a magnetic field angle calculated to degrees for channel A
'  in Single-Ended Mode and logs results on uart terminal.
'  Repeats operation every 300 milliseconds.
'Note : The angle can be measured in the range from -90 to 90 degrees.
'
'Additional Functions :
'
'- void floatCut() - Makes the float values to be rounded on two decimal places.
'- void plotAngle() - Sends results of angle on serial plotter.
'
'
program Click_Magnetic_rotary_PIC32

include Click_Magnetic_rotary_types
include Click_Magnetic_rotary_config
dim
    magnAngle as double 
    text as char[50] 
    logDeg as char[2] 
    plotTime as uint32_t 
    
sub procedure floatCut() 
dim
    count as uint8_t 
    conCnt as uint8_t 
    conVar as uint8_t 
    conCnt = 0
    conVar = 0

    for count = 0 to 50 - 1 
        if (text[count] = ".") then 
            conVar = 1 
        end if
        if (conVar = 1) then 
            inc(conCnt)
        end if
        if (conCnt > 3) then 
            if ((text[count] = "e") or (conVar = 2)) then 
                text[count - (conCnt - 4)] = text[count] 
                text[count] = 0 
                conVar = 2 
            else 
                text[count] = 0 
            end if
        end if
    next count
end sub

sub procedure plotAngle() 
dim
    plotData as int16_t 
    plotData = magnAngle

    IntToStr(plotData, text) 
    mikrobus_logWrite(text, _LOG_TEXT) 
    mikrobus_logWrite(",", _LOG_TEXT) 
    LongWordToStr(plotTime, text) 
    mikrobus_logWrite(text, _LOG_LINE) 
    if (plotTime = 0xFFFFFFFF) then 
        plotTime = 0 
    else 
        inc(plotTime)
    end if
end sub

sub procedure systemInit() 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT) 
    mikrobus_spiInit(_MIKROBUS1, @_MAGNROTARY_SPI_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART_A, 9600) 
    mikrobus_logWrite("*** Initializing... ***", _LOG_LINE) 
    Delay_ms(100) 
end sub

sub procedure applicationInit() 
    magnrotary_spiDriverInit(T_MAGNROTARY_P(@_MIKROBUS1_GPIO), T_MAGNROTARY_P(@_MIKROBUS1_SPI)) 
    Delay_ms(500) 
    logDeg[0] = 176 
    logDeg[1] = 0 
    plotTime = 0 
    mikrobus_logWrite("** Magnetic rotary is initialized **", _LOG_LINE) 
    mikrobus_logWrite("", _LOG_LINE) 
end sub

sub procedure applicationTask() 
    magnAngle = magnrotary_getFieldAngle(_MAGNROTARY_CHA_POS_GND_NEG or _MAGNROTARY_MSB_ZEROS_ORDER) 
    FloatToStr(magnAngle, text) 
    floatCut() 
    mikrobus_logWrite("Angle is : ", _LOG_TEXT) 
    mikrobus_logWrite(text, _LOG_TEXT) 
    mikrobus_logWrite(logDeg, _LOG_LINE) 
    Delay_ms(300) 
end sub

main :

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend
end.